plugins {
    id 'org.springframework.boot' version '2.5.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    // id 'org.springframework.experimental.aot' version '0.10.1'
    id 'org.graalvm.buildtools.native' version '0.9.1'
    id 'org.hibernate.orm'
    id 'com.google.cloud.tools.jib' version '2.8.0'
    //querydsl 추가
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.ssafy'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    maven { url 'https://repo.spring.io/release' }
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.0'
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.12.3'
    implementation 'junit:junit:4.12'
    compileOnly 'org.projectlombok:lombok'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'mysql:mysql-connector-java'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
    implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'

    implementation 'javax.xml.bind:jaxb-api'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    runtime 'io.jsonwebtoken:jjwt-impl:0.11.2'
    runtime 'io.jsonwebtoken:jjwt-jackson:0.11.2'

    compile 'org.springframework.boot:spring-boot-starter-data-redis:2.3.1.RELEASE'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.1.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.1.0'
    testCompileOnly 'junit:junit:4.12'
    testRuntimeOnly 'org.junit.vintage:junit-vintage-engine:5.1.0'

    implementation group: 'org.springframework', name: 'spring-context', version: '5.3.8'
    testImplementation group: 'org.springframework', name: 'spring-test', version: '5.3.8'
    testImplementation group: 'org.springframework.boot', name: 'spring-boot-test', version: '2.5.2'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.6'

    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.13'

    // spring-security-oauth2-autoconfigure
    implementation group: 'org.springframework.security.oauth.boot', name: 'spring-security-oauth2-autoconfigure', version: '2.3.12.RELEASE'
    // spring-security-oauth2-client
    implementation group: 'org.springframework.security', name: 'spring-security-oauth2-client', version: '5.4.5'


    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    implementation group: 'commons-io', name: 'commons-io', version: '2.8.0'
    implementation group: 'commons-fileupload', name: 'commons-fileupload', version: '1.4'

    implementation group: 'org.springframework.cloud', name: 'spring-cloud-aws', version: '2.2.1.RELEASE', ext: 'pom'
    implementation group: 'com.amazonaws', name: 'aws-java-sdk', version: '1.12.39'
    implementation group: 'com.amazonaws', name: 'aws-java-sdk-core', version: '1.12.39'
    implementation group: 'com.amazonaws', name: 'aws-java-sdk-s3', version: '1.12.39'

    implementation group: 'com.google.firebase', name: 'firebase-admin', version: '6.8.0'
    implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '4.2.2'


    compile("com.querydsl:querydsl-jpa") // querydsl
    compile("com.querydsl:querydsl-apt") // querydsl
}

ext {
    BUILD_VERSION = new Date().format("yyyyMMddHHmmss") // 빌드한 시간을 Image Tag 로 표시하기 위하여 사용한다.

}

test {
    useJUnitPlatform()
}

bootJar {
    layered()
}

bootBuildImage {
    builder = 'paketobuildpacks/builder:tiny'
    environment = ['BP_NATIVE_IMAGE': 'true']
}

hibernate {
    enhance {
        enableLazyInitialization = true
        enableDirtyTracking = true
        enableAssociationManagement = true
        enableExtendedEnhancement = false
    }
}
jib {
    from {
        image = "openjdk:8-jre-alpine" // 로컬환경에 설치되어 있는 도커데몬에서 Base Image 를 가져온다. (지금 상황에서는 굳이 원격에서 가져올 필요가 없으므로...)
    }
    to {
        image = "commb"
        tags = ["${project.version}".toString(), "${BUILD_VERSION}".toString()]
        credHelper = "pass"
    }
    container {
        mainClass = "com.ssafy.commb.CommbServerApplication"
        ports = ["8080"]
        volumes = ["/tmp"]
    }
}



//querydsl
def querydslSrcDir = "$buildDir/generated/querydsl"
querydsl {
    library = "com.querydsl:querydsl-apt"
    jpa = true
    querydslSourcesDir = querydslSrcDir
}

compileQuerydsl{
    options.annotationProcessorPath = configurations.querydsl
}
configurations {
    querydsl.extendsFrom compileClasspath
}
sourceSets {
    main {
        java {
            srcDirs = ['src/main/java', querydslSrcDir]
        }
    }
}
//querydsl
